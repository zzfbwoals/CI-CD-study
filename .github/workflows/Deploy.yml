name: Deploy to EC2 with Docker (Single Stage)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 레포지토리 가져오기
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 세팅
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: 'gradle'

      # 3. Gradle로 JAR 빌드
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Spring Boot JAR
        run: ./gradlew bootJar --no-daemon

      # 4. Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t myapp .

      # 5. DockerHub 로그인 & Push
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Tag and Push Docker image
        run: |
          docker tag myapp ${{ secrets.DOCKER_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      # 6. EC2 접속 후 컨테이너 실행
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest
            docker stop myapp || true
            docker rm myapp || true
            docker run -d --name myapp -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/myapp:latest